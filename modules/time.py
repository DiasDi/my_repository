# Time - модуль для работы со временем в Python.

# time.altzone - смещение DST часового пояса в секундах к западу от нулевого меридиана. Если часовой пояс находится восточнее, смещение отрицательно.

# time.asctime([t]) - преобразовывает кортеж или struct_time в строку вида "Thu Sep 27 16:42:37 2012". Если аргумент не указан, используется текущее время.

# time.clock() - в Unix, возвращает текущее время. В Windows, возвращает время, прошедшее с момента первого вызова данной функции.

# time.ctime([сек]) - преобразует время, выраженное в секундах с начала эпохи в строку вида "Thu Sep 27 16:42:37 2012".

# time.daylight - не 0, если определено, зимнее время или летнее (DST).

# time.gmtime([сек]) - преобразует время, выраженное в секундах с начала эпохи в struct_time, где DST флаг всегда равен нулю.

# time.localtime([сек]) - как gmtime, но с DST флагом.

# time.mktime(t) - преобразует кортеж или struct_time в число секунд с начала эпохи. Обратна функции time.localtime.

# time.sleep(сек) - приостановить выполнение программы на заданное количество секунд.

# time.strftime(формат, [t]) - преобразует кортеж или struct_time в строку по формату:

# time.strptime(строка [, формат]) - разбор строки, представляющей время в соответствии с форматом. Возвращаемое значение struct_time. Формат по умолчанию: "%a %b %d %H:%M:%S %Y".

# Класс time.struct_time - тип последовательности значения времени. Имеет интерфейс кортежа. Можно обращаться по индексу или по имени.

# tm_year
# tm_mon
# tm_mday
# tm_hour
# tm_min
# tm_sec
# tm_wday
# tm_yday
# tm_isdst
# time.time() - время, выраженное в секундах с начала эпохи.

# time.timezone - смещение местного часового пояса в секундах к западу от нулевого меридиана. Если часовой пояс находится восточнее, смещение отрицательно.

# time.tzname - кортеж из двух строк: первая - имя DST часового пояса, второй - имя местного часового пояса.
